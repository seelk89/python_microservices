version: '3.4'

services:
  api_gateway:
    image: ${DOCKER_REGISTRY-}api_gateway
    build:
      context: ./api_gateway
      dockerfile: ./Dockerfile
    expose:
      - 5003
    ports:
    - 5003:5003

  order_api:
    image: ${DOCKER_REGISTRY-}order_api
    build:
      context: ./order_api
      dockerfile: ./Dockerfile
    expose:
      - 5000
    ports:
      - 5000:5000

  product_api:
    image: ${DOCKER_REGISTRY-}product_api
    build:
      context: ./product_api
      dockerfile: ./Dockerfile
    expose:
      - 5002
    ports:
      - 5002:5002

  customer_api:
    image: ${DOCKER_REGISTRY-}customer_api
    build:
      context: ./customer_api
      dockerfile: ./Dockerfile
    expose:
      - 5001
    ports:
      - 5001:5001

  prometheus:
    container_name: prometheus-svc
    image: prom/prometheus
    ports:
      - 9091:9090
    command: --config.file=/etc/prometheus.yaml
    volumes:
      - ./prometheus.yaml:/etc/prometheus.yaml
  grafana:
    image: grafana/grafana:7.0.0
    ports:
      - 5005:5005
    environment:
      - GF_AUTH_BASIC_ENABLED=false
      - GF_AUTH_ANONYMOUS_ENABLED=true
      - GF_AUTH_ANONYMOUS_ORG_ROLE=Admin
  grafana-dashboards:
    image: alpine:3.10
    depends_on:
      - grafana
    volumes:
      - ./grafana_data:/grafana
    command: >
      /bin/sh -c "
        apk add --no-cache curl
        echo 'waiting for grafana'
        sleep 5s
        cd /grafana
        curl --request POST http://grafana:3000/api/datasources --header 'Content-Type: application/json' -d @datasources.json
        curl --request POST http://grafana:3000/api/dashboards/db --header 'Content-Type: application/json' -d @dashboard.json"
